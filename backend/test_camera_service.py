#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–∏—Å–∞ –∫–∞–º–µ—Ä
"""

import requests
import json
import time

def test_camera_service():
    base_url = "http://localhost:5000"
    
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ –∫–∞–º–µ—Ä...")
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
    try:
        response = requests.get(f"{base_url}/api/status")
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞: {data}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å—Ç–∞—Ç—É—Å–∞: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–∏—Å—É: {e}")
        return False
    
    # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–∞–º–µ—Ä
    try:
        response = requests.get(f"{base_url}/api/cameras")
        if response.status_code == 200:
            data = response.json()
            cameras = data.get('cameras', [])
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∫–∞–º–µ—Ä: {len(cameras)}")
            for camera in cameras:
                print(f"   - {camera['name']} (ID: {camera['id']}, –ê–∫—Ç–∏–≤–Ω–∞: {camera['is_active']})")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–∞–º–µ—Ä: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–∞–º–µ—Ä: {e}")
        return False
    
    # –¢–µ—Å—Ç 3: –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –∫–∞–º–µ—Ä
    try:
        response = requests.post(f"{base_url}/api/cameras/start-all")
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –ó–∞–ø—É—â–µ–Ω–æ –∫–∞–º–µ—Ä: {data.get('started_count', 0)}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∫–∞–º–µ—Ä: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∫–∞–º–µ—Ä: {e}")
        return False
    
    # –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞–¥—Ä–æ–≤
    try:
        response = requests.get(f"{base_url}/api/cameras/frames")
        if response.status_code == 200:
            data = response.json()
            frames_count = data.get('count', 0)
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∫–∞–¥—Ä–æ–≤: {frames_count}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞–¥—Ä–æ–≤: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞–¥—Ä–æ–≤: {e}")
        return False
    
    # –¢–µ—Å—Ç 5: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∫–∞–º–µ—Ä
    try:
        response = requests.post(f"{base_url}/api/cameras/stop-all")
        if response.status_code == 200:
            print("‚úÖ –í—Å–µ –∫–∞–º–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–∞–º–µ—Ä: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–∞–º–µ—Ä: {e}")
        return False
    
    print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    return True

if __name__ == '__main__':
    test_camera_service() 